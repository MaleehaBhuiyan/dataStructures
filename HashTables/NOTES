• Explain what a Hash table is 
    - a hash function is a functiont hat takes data of an arbitrary size and it spits out data of a fixed size 
    - Hash tables are used to store key-value pairs 
    - They are like arrays, but the keys are not ordered 
    - Unlike arrays, hash tables are fast for all of the following operations: finding values, adding new values, and removing values! 
    - Why should I care?
        • Nearly every programming language gas some sort of hasg table data structure 
        • Because of their speed, hash tables are very commonly used
    - Hash Tables in the wild:
        • Python has dictionaries 
        • JS has objects and maps 
        • Java, Go, Scala have maps
        • Ruby has hashes 
    - To implement a hash table, we will use an array 
        - In order to look up values by key, we need a way to convery keys into valid array indices 
            ^ a function that performs this is called a hash function 


• Define what a hashing algorithm is 

• Discuss what makes a good hashing algorithm 
    1) Fast (constant time)
    2) Doesn't cluster outputs at specific indices, but distributes uniformlu
    3) Deterministic (same input yields same output)

    - Prime numbers
    • The prime number in the hash is helpful in spreading out keys more uniformly 
    • It's also helpful if the array that you're putting values into has a prime length 

• Understand how collisions occur in a hash table
    - Even with a large array and a greta hash function , collisions are inevitable 

• Handle collisions using seperate chaining or linear probing 
    1) Seperate chaining: store the different pieces of data in the same spot but with another nested data structure 
        - at each index in our array we store values using a more sophisticated data structure (an array or linked list)
        - this allows us to store multiple key-value pairs at the same index
        - allows to store more data than the length of the table 
    2) Linear probing: store data in only one spot
        - when we find a collision =, we search through the array to find the next empty slot